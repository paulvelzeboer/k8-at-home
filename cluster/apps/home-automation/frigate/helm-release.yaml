---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home-automation
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: frigate
      version: 6.1.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/frigate
      tag: v0.9.2-amd64
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          hajimari.io/enable: "true"
          hajimari.io/icon: "cctv"
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
          - host: "frigate.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "frigate.${SECRET_DOMAIN}"
            secretName: "frigate-tls"
    securityContext:
      privileged: true
    persistence:
      data:
        enabled: true
        existingClaim: frigate-config-v1
        mountPath: /data
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "192.168.1.3"
            path: /mnt/media
        mountPath: /media
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm
    config: |
      mqtt:
        host: emqx
        topic_prefix: frigate
        user: ${SECRET_MQTT_USERNAME}
        password: ${SECRET_MQTT_PASSWORD}

      database:
        path: /data/frigate.db

      detectors:
        coral:
          type: edgetpu
          device: usb

      # Global objects configuration
      objects:
        track:
          - person
          - bird
          - cat
        filters:
          person:
            max_area: 20000000
            min_area: 4000
          bird:
            max_area: 5000
            min_area: 100
            min_score: 0.3
            threshold: 0.5
          cat:
            max_area: 10000
            min_area: 400
            min_score: 0.3
            threshold: 0.5

      # Global ffmpeg configuration
      ffmpeg:
        hwaccel_args:
          - -hwaccel
          - vaapi
          - -hwaccel_device
          - /dev/dri/renderD128
          - -hwaccel_output_format
          - yuv420p

       # Specify camera's
      cameras:
        camera_achter: # <------ Name the camera
          ffmpeg:
            inputs:
              - path: rtsp://192.168.1.3:8554/camera-buiten-achter # <----- Update for your camera
                roles:
                  - detect
                  - rtmp
          detect:
            width: 1920 # <---- update for your camera's resolution
            height: 1080 # <---- update for your camera's resolution
            fps: 5
          motion:
            mask:
              - 0,318,325,30,1395,50,1716,387,1920,470,1920,0,0,0
        camera_voor: # <------ Name the camera
          ffmpeg:
            inputs:
              - path: rtsp://192.168.1.3:8554/camera-buiten-voor # <----- Update for your camera
                roles:
                  - detect
                  - rtmp
          detect:
            width: 1920 # <---- update for your camera's resolution
            height: 1080 # <---- update for your camera's resolution
            fps: 5

          motion:
            mask:
              - 987,0,1448,87,1828,784,1920,717,1920,0

    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-coral-tpu
                  operator: In
                  values:
                    - "true"
            # - matchExpressions:
            #     - key: feature.node.kubernetes.io/custom-intel-gpu
            #       operator: In
            #       values:
            #         - "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        memory: 100Mi
        cpu: 500m
      limits:
        gpu.intel.com/i915: 1
        memory: 3000Mi