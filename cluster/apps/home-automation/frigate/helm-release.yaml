---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home-automation
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: frigate
      version: 8.0.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/frigate
      tag: v0.10.0-amd64
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-forward-auth@kubernetescrd
          hajimari.io/enable: "true"
          hajimari.io/icon: "cctv"
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
          - host: "frigate.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "frigate.${SECRET_DOMAIN}"
            secretName: "frigate-tls"
    securityContext:
      privileged: true
    persistence:
      data:
        enabled: true
        existingClaim: frigate-config
        mountPath: /data
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "192.168.1.3"
            path: /mnt/media/frigate
        mountPath: /media/frigate
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm
    config: |
      mqtt:
        host: mosquitto
        topic_prefix: frigate
        user: ${SECRET_MQTT_USERNAME}
        password: ${SECRET_MQTT_PASSWORD}

      database:
        path: /data/frigate.db

      # Optional: logger verbosity settings
      logger:
        # Optional: Default log verbosity (default: shown below)
        default: debug
        # Optional: Component specific logger overrides
        logs:
          frigate.event: debug

      detectors:
        coral:
          type: edgetpu
          device: usb

      # Global objects configuration
      objects:
        track:
          - person
          - bird
        filters:
          person:
            max_area: 20000000
            min_area: 5000
          bird:
            max_area: 5000
            min_area: 300
            min_score: 0.3
            threshold: 0.5
          cat:
            max_area: 10000
            min_area: 400
            min_score: 0.3
            threshold: 0.5
      # ffmpeg:
       # hwaccel_args:
         # - -hwaccel
         # - vaapi
         # - -hwaccel_device
         #  - /dev/dri/renderD128
         # - -hwaccel_output_format
         # - yuv420p
      snapshots:
        # Optional: Enable writing jpg snapshot to /media/frigate/clips (default: shown below)
        # This value can be set via MQTT and will be updated in startup based on retained value
        enabled: True
        # Optional: print a timestamp on the snapshots (default: shown below)
        timestamp: True
        # Optional: draw bounding box on the snapshots (default: shown below)
        bounding_box: True

      cameras:
        camera_achter: # <------ Name the camera
          ffmpeg:
            inputs:
              - path: rtsp://192.168.1.3:8554/camera-buiten-achter # <----- Update for your camera
                roles:
                  - detect
          detect:
            width: 1920 # <---- update for your camera's resolution
            height: 1080 # <---- update for your camera's resolution
            fps: 20
          motion:
            mask:
              - 0,318,343,75,1268,39,1384,91,1716,387,1920,609,1920,0,0,0
          objects:
            track:
              - bird
              - cat
              - person
        camera_voor: # <------ Name the camera
          ffmpeg:
            inputs:
              - path: rtsp://192.168.1.3:8554/camera-buiten-voor # <----- Update for your camera
                roles:
                  - detect
          detect:
            width: 1920 # <---- update for your camera's resolution
            height: 1080 # <---- update for your camera's resolution
            fps: 20
          motion:
            mask:
              - 1061,0,1341,129,1640,886,1920,717,1920,0
          objects:
            track:
              - bird
              - cat
              - person
        #camera_vogelplank: # <------ Name the camera
        #  ffmpeg:
        #    inputs:
        #      - path: rtsp://${SECRET_CAMERA_USER}:${SECRET_CAMERA_PASSWORD}@192.168.1.102:554/tcp/av0_0 # <----- Update for your camera
        #        roles:
        #          - detect
        #  detect:
        #    width: 1280 # <---- update for your camera's resolution
        #    height: 720  # <---- update for your camera's resolution
        #    fps: 7
        #  motion:
        #    mask:
        #      - 0,720,0,5,576,0,974,0,967,388,689,417,689,505,769,720
        #  objects:
        #    track:
        #      - bird
    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"
    nodeSelector:
      node-role.kubernetes.io/control-plane: "true"
